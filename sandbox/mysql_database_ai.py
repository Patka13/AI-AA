import mysql.connector

mydb = mysql.connector.connect(		
	host = "localhost", ## cloud
	user = "root",
	passwd = "Projekt2020!",
	database = "Database_AI"
	)

# Create Cursor Instance
my_cursor = mydb.cursor()

# Create A Database
#my_cursor.execute("CREATE DATABASE Database_AI")

#my_cursor.execute("CREATE TABLE users (user_id int AUTO_INCREMENT PRIMARY KEY, name_1 VARCHAR(20), name_2 VARCHAR(20), name_3 VARCHAR(20), name_4 VARCHAR(20), address_1 VARCHAR(50), address_2 VARCHAR(50), address_3 VARCHAR(50), address_4 VARCHAR(50), email VARCHAR(255), phone int(20), status VARCHAR(20), reserved1 VARCHAR(50), reserved2 VARCHAR(50), reserved3 VARCHAR(50), reserved4 VARCHAR(50), reserved5 VARCHAR(50), revision int(10), inputter VARCHAR(50), authorizer VARCHAR(50), date_time TIMESTAMP)")

	#my_cursor.execute("CREATE TABLE userparam (user_id int, FOREIGN KEY(user_id) REFERENCES users(user_id), user_group VARCHAR(10), data_updates VARCHAR(1), linked_user int, FOREIGN KEY(linked_user) REFERENCES users(user_id), priority_settings VARCHAR(20), user_statements VARCHAR(20), user_classification VARCHAR(20), user_type VARCHAR(20), user_payment_allowance VARCHAR(20), monthly_charge_status VARCHAR(20), reserved1 VARCHAR(50), reserved2 VARCHAR(50), reserved3 VARCHAR(50), reserved4 VARCHAR(50), reserved5 VARCHAR(50), revision int(10), inputter VARCHAR(50), authorizer VARCHAR(50), date_time TIMESTAMP)")

#my_cursor.execute("INSERT INTO users () VALUES (%s, %s), ()
#mydby.commit()

#my_cursor.execute("DROP TABLE userparam")



#my_cursor.execute("CREATE TABLE useraccount (user_id int, FOREIGN KEY(user_id) REFERENCES users(user_id), corelated_user_allowance boolean, password1 VARCHAR(8), password_date datetime, birth_date date, control_question1 VARCHAR(50), control_question1_answer VARCHAR(50), reserved1 VARCHAR(50), reserved2 VARCHAR(50), reserved3 VARCHAR(50), reserved4 VARCHAR(50), reserved5 VARCHAR(50), revision int(10), inputter VARCHAR(50), authorizer VARCHAR(50), date_time TIMESTAMP)")
#my_cursor.execute("CREATE TABLE userbudgets (user_id int, FOREIGN KEY(user_id) REFERENCES users(user_id), budget1_name VARCHAR(255), budget1_type VARCHAR(15), budget1_subtype VARCHAR(50), budget1_goal int, budget1_ccy VARCHAR(5), budget1_actual int, budget1_period VARCHAR(1), budget2_name VARCHAR(255), budget2_type VARCHAR(15), budget2_subtype VARCHAR(50), budget2_goal int, budget2_ccy VARCHAR(5), budget2_actual int, budget2_period VARCHAR(1), budget3_name VARCHAR(255), budget3_type VARCHAR(15), budget3_subtype VARCHAR(50), budget3_goal int, budget3_ccy VARCHAR(5), budget3_actual int, budget3_period VARCHAR(1), budget4_name VARCHAR(255), budget4_type VARCHAR(15), budget4_subtype VARCHAR(50), budget4_goal int, budget4_ccy VARCHAR(5), budget4_actual int, budget4_period VARCHAR(1), budget5_name VARCHAR(255), budget5_type VARCHAR(15), budget5_subtype VARCHAR(50), budget5_goal int, budget5_ccy VARCHAR(5), budget5_actual int, budget5_period VARCHAR(1), budget6_name VARCHAR(255), budget6_type VARCHAR(15), budget6_subtype VARCHAR(50), budget6_goal int, budget6_ccy VARCHAR(5), budget6_actual int, budget6_period VARCHAR(1), budget7_name VARCHAR(255), budget7_type VARCHAR(15), budget7_subtype VARCHAR(50), budget7_goal int, budget7_ccy VARCHAR(5), budget7_actual int, budget7_period VARCHAR(1), budget8_name VARCHAR(255), budget8_type VARCHAR(15), budget8_subtype VARCHAR(50), budget8_goal int, budget8_ccy VARCHAR(5), budget8_actual int, budget8_period VARCHAR(1), budget9_name VARCHAR(255), budget9_type VARCHAR(15), budget9_subtype VARCHAR(50), budget9_goal int, budget9_ccy VARCHAR(5), budget9_actual int, budget9_period VARCHAR(1), budget10_name VARCHAR(255), budget10_type VARCHAR(15), budget10_subtype VARCHAR(50), budget10_goal int, budget10_ccy VARCHAR(5), budget10_actual int, budget10_period VARCHAR(1), reserved1 VARCHAR(50), reserved2 VARCHAR(50), reserved3 VARCHAR(50), reserved4 VARCHAR(50), reserved5 VARCHAR(50), revision int(10), inputter VARCHAR(50), authorizer VARCHAR(50), date_time TIMESTAMP)")

#my_cursor.execute("CREATE TABLE userbankingaccount (user_id int, FOREIGN KEY(user_id) REFERENCES users(user_id), bank1_name VARCHAR(100), bank1_user_id int, bank1_user_account_id int, bank1_user_account_ccy VARCHAR(5), bank1_operations_allowance VARCHAR(20), bank1_password_api VARCHAR(30), bank1_allowance_status date, bank2_name VARCHAR(100), bank2_user_id int, bank2_user_account_id int, bank2_user_account_ccy VARCHAR(5), bank2_operations_allowance VARCHAR(20), bank2_password_api VARCHAR(30), bank2_allowance_status date, bank3_name VARCHAR(100), bank3_user_id int, bank3_user_account_id int, bank3_user_account_ccy VARCHAR(5), bank3_operations_allowance VARCHAR(20), bank3_password_api VARCHAR(30), bank3_allowance_status date, bank4_name VARCHAR(100), bank4_user_id int, bank4_user_account_id int, bank4_user_account_ccy VARCHAR(5), bank4_operations_allowance VARCHAR(20), bank4_password_api VARCHAR(30), bank4_allowance_status date, bank5_name VARCHAR(100), bank5_user_id int, bank5_user_account_id int, bank5_user_account_ccy VARCHAR(5), bank5_operations_allowance VARCHAR(20), bank5_password_api VARCHAR(30), bank5_allowance_status date, bank6_name VARCHAR(100), bank6_user_id int, bank6_user_account_id int, bank6_user_account_ccy VARCHAR(5), bank6_operations_allowance VARCHAR(20), bank6_password_api VARCHAR(30), bank6_allowance_status date, bank7_name VARCHAR(100), bank7_user_id int, bank7_user_account_id int, bank7_user_account_ccy VARCHAR(5), bank7_operations_allowance VARCHAR(20), bank7_password_api VARCHAR(30), bank7_allowance_status date, bank8_name VARCHAR(100), bank8_user_id int, bank8_user_account_id int, bank8_user_account_ccy VARCHAR(5), bank8_operations_allowance VARCHAR(20), bank8_password_api VARCHAR(30), bank8_allowance_status date, bank9_name VARCHAR(100), bank9_user_id int, bank9_user_account_id int, bank9_user_account_ccy VARCHAR(5), bank9_operations_allowance VARCHAR(20), bank9_password_api VARCHAR(30), bank9_allowance_status date, bank10_name VARCHAR(100), bank10_user_id int, bank10_user_account_id int, bank10_user_account_ccy VARCHAR(5), bank10_operations_allowance VARCHAR(20), bank10_password_api VARCHAR(30), bank10_allowance_status date, reserved1 VARCHAR(50), reserved2 VARCHAR(50), reserved3 VARCHAR(50), reserved4 VARCHAR(50), reserved5 VARCHAR(50), revision int(10), inputter VARCHAR(50), authorizer VARCHAR(50), date_time TIMESTAMP)")

#my_cursor.execute("CREATE TABLE usertransactions (user_id int, FOREIGN KEY(user_id) REFERENCES users(user_id), txn_id int, txn_1 VARCHAR(255), txn_2 VARCHAR(255), txn_3 int, txn_4 VARCHAR(5), txn_5 VARCHAR(255), txn_6 VARCHAR(255), txn_7 VARCHAR(255), txn_8 VARCHAR(255), txn_9 VARCHAR(255), txn_10 VARCHAR(255), classification_status boolean, classification_res VARCHAR(50), probability_class int, correctness boolean, user_classification VARCHAR(50), txn_bank_api VARCHAR(50), reserved1 VARCHAR(50), reserved2 VARCHAR(50), reserved3 VARCHAR(50), reserved4 VARCHAR(50), reserved5 VARCHAR(50), revision int(10), inputter VARCHAR(50), authorizer VARCHAR(50), date_time TIMESTAMP)")
